{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ernes\\\\Desktop\\\\final\\\\client\\\\src\\\\components\\\\feed\\\\Feed.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport Post from \"../post/Post\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = username ? await axios.get(\"/posts/profile/\" + username) : await axios.get(\"posts/timeline/\" + user._id);\n      setPosts(res.data.sort((p1, p2) => {\n        return new Date(p2.createdAt) - new Date(p1.createdAt);\n      }));\n    };\n\n    fetchPosts();\n  }, [username, user._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedWrapper\",\n      children: [(!username || username === user.username) && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 63\n      }, this), posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n        post: p\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"omHF6PJyNAaQxhbtLbXyaS78q/s=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/Ernes/Desktop/final/client/src/components/feed/Feed.jsx"],"names":["useContext","useEffect","useState","Post","Share","axios","AuthContext","Feed","username","posts","setPosts","user","fetchPosts","res","get","_id","data","sort","p1","p2","Date","createdAt","map","p"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,eAAe,SAASC,IAAT,OAA4B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWX,UAAU,CAACM,WAAD,CAA3B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,UAAU,GAAG,YAAY;AAC3B,YAAMC,GAAG,GAAGL,QAAQ,GACd,MAAMH,KAAK,CAACS,GAAN,CAAU,oBAAoBN,QAA9B,CADQ,GAEd,MAAMH,KAAK,CAACS,GAAN,CAAU,oBAAoBH,IAAI,CAACI,GAAnC,CAFZ;AAGAL,MAAAA,QAAQ,CACJG,GAAG,CAACG,IAAJ,CAASC,IAAT,CAAc,CAACC,EAAD,EAAKC,EAAL,KAAY;AACtB,eAAO,IAAIC,IAAJ,CAASD,EAAE,CAACE,SAAZ,IAAyB,IAAID,IAAJ,CAASF,EAAE,CAACG,SAAZ,CAAhC;AACH,OAFD,CADI,CAAR;AAKH,KATD;;AAUAT,IAAAA,UAAU;AACb,GAZQ,EAYN,CAACJ,QAAD,EAAWG,IAAI,CAACI,GAAhB,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACK,CAAC,CAACP,QAAD,IAAaA,QAAQ,KAAKG,IAAI,CAACH,QAAhC,kBAA6C,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADlD,EAEKC,KAAK,CAACa,GAAN,CAAWC,CAAD,iBACP,QAAC,IAAD;AAAkB,QAAA,IAAI,EAAEA;AAAxB,SAAWA,CAAC,CAACR,GAAb;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5BuBR,I;;KAAAA,I","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport Post from \"../post/Post\";\r\nimport Share from \"../share/Share\";\r\nimport \"./feed.css\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Feed({ username }) {\r\n    const [posts, setPosts] = useState([]);\r\n    const { user } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            const res = username\r\n                ? await axios.get(\"/posts/profile/\" + username)\r\n                : await axios.get(\"posts/timeline/\" + user._id);\r\n            setPosts(\r\n                res.data.sort((p1, p2) => {\r\n                    return new Date(p2.createdAt) - new Date(p1.createdAt);\r\n                })\r\n            );\r\n        };\r\n        fetchPosts();\r\n    }, [username, user._id]);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feedWrapper\">\r\n                {(!username || username === user.username) && <Share />}\r\n                {posts.map((p) => (\r\n                    <Post key={p._id} post={p} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}